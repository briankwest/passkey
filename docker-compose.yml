services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: passkey_demo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - passkey-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "5001:5001"
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/passkey_demo
      SESSION_SECRET: dev-session-secret
      JWT_SECRET: dev-jwt-secret
      PORT: 5001
      NODE_ENV: development
      RP_NAME: Passkey Demo
      RP_ID: localhost
      ORIGIN: http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/.env:/app/.env
      - ./backend/database:/app/database
    networks:
      - passkey-network
    command: npm run dev

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://backend:5001
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/index.html:/app/index.html
      - ./frontend/package.json:/app/package.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
    networks:
      - passkey-network
    command: npm run dev

networks:
  passkey-network:
    driver: bridge

volumes:
  postgres_data: