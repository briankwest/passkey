services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: passkey_demo
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - passkey-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile.dev
    ports:
      - "5001:5001"
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/passkey_demo
      NODE_ENV: development
      PORT: 5001
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./database:/app/database
    networks:
      - passkey-network
    command: npm run dev

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - passkey-network

networks:
  passkey-network:
    driver: bridge

volumes:
  postgres_data: